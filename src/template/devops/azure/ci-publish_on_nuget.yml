# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# Before run pipeline please check the variables
# *** Library variables ***
# PrivateFeed - Nuget feed name or id where the package will be published

# *** Pipeline variables ***
# MajorVer
# MinorVer
# ProjectName

# manual trigger
trigger:
  - none

# Changing the name the variable $(Build.BuildNumber) will change as well
name: $(MajorVer).$(MinorVer)$(Rev:.r)

pool:
  name: Azure Pipelines
  vmImage: ubuntu-latest # Agent VM image name

resources:
  - repo: self

variables:
  - group: General
  - name: buildConfiguration
    value: "Release"
  - name: version
    value: "$(Build.BuildNumber)" # This variable is used to update the nuget version

# Single stage Build section
steps:
  - task: UseDotNet@2
    displayName: "Use NET9"
    inputs:
      version: "9.0.x"
      includePreviewVersions: true # Required for preview versions

  - task: NuGetAuthenticate@1
    displayName: "NuGet Authenticate"

  - task: DotNetCoreCLI@2
    displayName: "Restore packages"
    inputs:
      command: "restore"
      projects: "**/$(ProjectName).csproj"
      feedsToUse: "select"
      vstsFeed: "$(PrivateFeed)"
      arguments: "--configuration $(buildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: "Build projects"
    inputs:
      command: "build"
      projects: "**/$(ProjectName).csproj"
      arguments: "-p:MyPackVersion=$(Build.BuildNumber) --configuration $(buildConfiguration) --no-restore --nologo" # Update this to match your need

  # Pack, publish and push to the feed
  - task: DotNetCoreCLI@2
    displayName: "Pack NuGet Package"
    inputs:
      command: "pack"
      packagesToPack: "**/$(ProjectName).csproj"
      versioningScheme: "byEnvVar"
      versionEnvVar: "Build.BuildNumber"

  - task: DotNetCoreCLI@2
    displayName: "Publish the artifacts"
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)"
      zipAfterPublish: True

  - task: DotNetCoreCLI@2
    displayName: "Push to the feed"
    inputs:
      command: "push"
      publishVstsFeed: "$(PrivateFeed)"
